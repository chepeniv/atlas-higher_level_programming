running doctest:
	python -m doctest -v testfile.txt
running unittest
	`python -m unittest test_module_name`
	`python -m unittest`

>>> import importlib
>>> matrix_module = importlib.import_module("2-matrix_divided")
>>> matrix_div = matrix_module.matrix_divided
>>> A = [ [-33, 44, 23, 7], [3, 5, -100, 12], [9, 17, 0, 25] ]
>>> B = [ [3, 5, 23, 7], ["cool", "bye", 23, 7], [-33, 22, 23, 7] ]
>>> C = [ [-33], [3, 5, 23], [44, 2, 7, 6.3] ]
>>> D = [ [-33, 44, 23, 7], [3, 5, 23, 7], [-33, 44, 23, 7] ]
>>> u = 3
>>> v = -4.3
>>> w = 0.25
>>> matrix_div(A, u)
[[-11.0, 14.67, 7.67, 2.33], [1.0, 1.67, -33.33, 4.0], [3.0, 5.67, 0.0, 8.33]]
>>> matrix_div(A, v)
[[7.67, -10.23, -5.35, -1.63], [-0.7, -1.16, 23.26, -2.79], [-2.09, -3.95, -0.0, -5.81]]
>>> matrix_div(A, w)
[[-132.0, 176.0, 92.0, 28.0], [12.0, 20.0, -400.0, 48.0], [36.0, 68.0, 0.0, 100.0]]
>>> matrix_div(A, float('inf'))
[[-0.0, 0.0, 0.0, 0.0], [0.0, 0.0, -0.0, 0.0], [0.0, 0.0, 0.0, 0.0]]
>>> matrix_div(A, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero
>>> matrix_div(A, "nice")
Traceback (most recent call last):
	...
TypeError: div must be a number
>>> matrix_div(C, u)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size
>>> matrix_div(B, u)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
